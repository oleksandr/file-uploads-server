#
# Main buildout configuration
#

[buildout]
newest = false
unzip = true

# Activate this if you want to use a cache dir, you will have to create the dir
download-cache = ${buildout:directory}/downloads

parts =
    clean-src
    make-dirs
    python
    nginx-upload
    nginx
    nginx-conf
    nginx-index-conf
    nginx-ssl-cert
    nginx-ssl-key
    supervisor

[project]
port-http = 8080
port-https = 8443
port-supervisor = 9100
host = 127.0.0.1
max-upload-size=100m
uploads-backend-addr=127.0.0.1:5000
uploads-store-path=${buildout:directory}/var/uploads
ssl-cert = -----BEGIN CERTIFICATE-----
    MIICczCCAdwCCQCBO0pZp6+FEzANBgkqhkiG9w0BAQUFADB+MQswCQYDVQQGEwJE
    RTEMMAoGA1UECBMDTlJXMQ0wCwYDVQQHEwRCb25uMQ0wCwYDVQQKEwROb25lMQsw
    CQYDVQQLEwJJVDESMBAGA1UEAxMJbG9jYWxob3N0MSIwIAYJKoZIhvcNAQkBFhN1
    c2VybmFtZUBkb21haW4uY29tMB4XDTEzMDIwMTA2MzUzNloXDTE0MDIwMTA2MzUz
    NlowfjELMAkGA1UEBhMCREUxDDAKBgNVBAgTA05SVzENMAsGA1UEBxMEQm9ubjEN
    MAsGA1UEChMETm9uZTELMAkGA1UECxMCSVQxEjAQBgNVBAMTCWxvY2FsaG9zdDEi
    MCAGCSqGSIb3DQEJARYTdXNlcm5hbWVAZG9tYWluLmNvbTCBnzANBgkqhkiG9w0B
    AQEFAAOBjQAwgYkCgYEA6oOpaC074GhPvVgvqmq3aWVPgocL0S6SkASZVHmlo2UQ
    OLAqip2XQuYGpJmSoepzC6GVrfzcp2D5/j2Z4IzSI0QELMWRzYl1H/Z8P3t+iD9J
    QkWVineIfiuqpZzVdpbtBgs7ZqZFw/spcrFaU/jxwCYFnxO8WQzAgH7RmIKEIIsC
    AwEAATANBgkqhkiG9w0BAQUFAAOBgQAnBK8FwFvu0mBPSU5fjS7KRpKiZSUyWhFE
    C/Jz4wZgBz8KEOf9Nnw1zv5g//rXtH6P0hCNPwsfFlNQAMYM6+l6/71+p+gPPhcW
    NDU4Y+eykNVtDS6EXM2K+nyUtbde68Jr0iRg26/tgQ5ctUSHSt+ml5kxdUsPdQFn
    03ic2u6PmA==
    -----END CERTIFICATE-----
ssl-key = -----BEGIN RSA PRIVATE KEY-----
    MIICXQIBAAKBgQDqg6loLTvgaE+9WC+qardpZU+ChwvRLpKQBJlUeaWjZRA4sCqK
    nZdC5gakmZKh6nMLoZWt/NynYPn+PZngjNIjRAQsxZHNiXUf9nw/e36IP0lCRZWK
    d4h+K6qlnNV2lu0GCztmpkXD+ylysVpT+PHAJgWfE7xZDMCAftGYgoQgiwIDAQAB
    AoGBANQ7Xx7GgP+vpypmGo0RkvcxFmm8KbeffEgVwWWvyXU7yxhiZb2YrQGABtcD
    nK4n7QHDtCAHTPG1U8kAmrea+bfxD5/W8+SpqygIgDs6QCnK8kVXEEDiY6mPmeij
    MBieuXP/1sJZNFMg0ONWlx5zcaTNxcol/lYAJqSJxydyJH1BAkEA+ZTxDtXEUzhr
    yeDkEyOiaWECHEU3qzlD9IwAgYhWSaqHspM+A3k3PBtXVopmYO1kXxuIfCspZHDD
    iHQE5Qqm8QJBAPCLhu1fFyEoNhZ9Lbr9MM4Twfs+SBCiXBEjdf5nntf6EBXG2wDH
    gcTze7Sdglk24lPN/Uyo7zru/VEPoKUQFzsCQDQFU2lgLRebfvwJIADNQKDuU15J
    Hx1VRlDGjaRyImogXUBfaGGY9mZU3JNxLX2ufWlFd+FJrcr9pgPfCtYirkECQAUX
    PtzJNWkbO8HQFmatsxm5a1KQ59+KQB6QvI+My9zQSwTa94mVr1ZmvMh+yOJweevC
    IUk9DgsWQcA0b3bu1z8CQQCjZgcJBc37ZPL0/DYzLR+YOdfN+mT5q+ZQv8rMia5b
    NMF76StND9dvbb0eCpG7mj5/T4HxpUf2E9J3SWx9MVqB
    -----END RSA PRIVATE KEY-----

[clean-src]
recipe = iw.recipe.cmd
on_install = true
on_update = true
cmds =
    find ${buildout:directory}/src -name '*.pyc' | xargs rm -f

[clean-dirs]
recipe = iw.recipe.cmd
on_install = true
on_update = false
cmds =
    rm -rf ${buildout:directory}/var/nginx/client-body-temp
    rm -rf ${buildout:directory}/var/nginx/proxy-temp
    rm -rf ${buildout:directory}/var/nginx/fastcgi-temp
    rm -rf ${project:uploads-store-path}

[make-dirs]
recipe = iw.recipe.cmd
depends = ${clean-dirs:cmds}
on_install = true
on_update = true
cmds =
    mkdir -p ${buildout:directory}/var/nginx/client-body-temp
    mkdir -p ${buildout:directory}/var/nginx/proxy-temp
    mkdir -p ${buildout:directory}/var/nginx/fastcgi-temp
    mkdir -p ${buildout:directory}/var/uploads
    for i in {0..9}; do mkdir -p ${project:uploads-store-path}/$i;done

[pcre_fix_configure]
recipe = iw.recipe.cmd
on_install = true
on_update = true
cmds =
    chmod a+x ${pcre:destination}/configure

[pcre]
recipe = hexagonit.recipe.download
url = http://garr.dl.sourceforge.net/project/pcre/pcre/8.32/pcre-8.32.tar.gz
strip-top-level-dir = true

[python]
recipe = zc.recipe.egg
#initialization =
extra-paths =
    ${buildout:directory}/src
eggs =
    Flask==0.9
scripts =
    python
interpreter = python

[nginx-upload]
recipe = gocept.download
url = http://www.grid.net.ru/nginx/download/nginx_upload_module-2.2.0.tar.gz
strip-top-level-dir = true
md5sum = 2681a6167551830a23336fa41bc539a1

[nginx]
recipe = zc.recipe.cmmi
depends = ${pcre_fix_configure:cmds}
url = http://nginx.org/download/nginx-1.2.6.tar.gz
configure-options =
    --with-pcre=${pcre:destination}
    --with-http_ssl_module
    --http-client-body-temp-path=${buildout:directory}/var/nginx/client-body-temp
    --http-proxy-temp-path=${buildout:directory}/var/nginx/proxy-temp
    --http-fastcgi-temp-path=${buildout:directory}/var/nginx/fastcgi-temp
    --prefix=${buildout:parts-directory}/nginx
    --conf-path=${buildout:directory}/etc/nginx/nginx.conf
    --error-log-path=${buildout:directory}/var/log/nginx-error.log
    --http-log-path=${buildout:directory}/var/log/nginx-access.log
    --pid-path=${buildout:directory}/var/run/nginx.pid
    --lock-path=${buildout:directory}/var/lock/nginx.lock
    --add-module=${nginx-upload:location}/

[nginx-conf]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/nginx/nginx.conf.in
output = ${buildout:directory}/etc/nginx/nginx.conf

[nginx-index-conf]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/nginx/index.html.in
output = ${nginx:location}/html/index.html

[nginx-ssl-cert]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/nginx/server.crt.in
output = ${buildout:directory}/etc/nginx/server.crt

[nginx-ssl-key]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/nginx/server.key.in
output = ${buildout:directory}/etc/nginx/server.key

[supervisor]
recipe = collective.recipe.supervisor
port = ${project:port-supervisor}
user = admin
password = admin.
pidfile = ${buildout:directory}/var/run/supervisord.pid
serverurl = http://${project:host}:${project:port-supervisor}
plugins =
    superlance
programs =
    0 nginx ${nginx:location}/sbin/nginx [ -c ${buildout:directory}/etc/nginx/nginx.conf ]
    1 backend ${buildout:bin-directory}/python [ -m example.backend ]
eventlisteners =
    Nginx-Memmon TICK_60 ${buildout:bin-directory}/memmon [-p nginx=200MB]
    Backend-Memmon TICK_60 ${buildout:bin-directory}/memmon [-p backend=200MB]
